buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// mariadb
	implementation 'org.hibernate:hibernate-core:5.6.15.Final'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'

	// PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'

	// hibernate-spatial - jts Point쓰기 위해서 추가
	implementation 'org.hibernate:hibernate-spatial:5.6.11.Final'

	// query dsl
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드


	// swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'

	// mattermost
	implementation 'com.google.code.gson:gson:2.8.5'

	// health check
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// json
	implementation 'org.json:json:20210307'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
//	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// web socket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

tasks.named('test') {
	useJUnitPlatform()
}

